{"version":3,"sources":["components/Product.js","components/Category.js","selectors/numberOfProductsInCart.js","selectors/totalPrice.js","components/CartButton.js","selectors/categoryForProductSelector.js","pages/ProductsPage.js","components/ProductExtended.js","pages/ProductPage.tsx","components/CartItem.js","pages/CartPage.js","App.js","serviceWorker.js","libs/api.js","models/products.js","models/categories.js","models/cart.js","models/index.js","store.js","index.js"],"names":["connect","dispatch","ownProps","addProductToCart","cart","addProduct","product","_ref","category","react_default","a","createElement","Link","to","concat","id","name","onClick","Category","numberOfProductsInCart","items","reduce","prev","item","quantity","totalPrice","products","price","Number","toFixed","state","productsQuantity","numberOfProductsInCartSelector","totalPriceSelector","getCategoryForProduct","categories","find","c","categoryId","ProductsPage","this","loadData","props","nextProps","match","url","path","productsQueryParams","filter","params","loadProducts","loadCategories","_this","components_CartButton","map","key","length","components_Product","categoryForProductSelector","React","Component","list","loadAll","ProductExtended","description","ProductPage","loadOne","_ref2","_ref3","addOne","setQuantity","removeOne","remove","removeProduct","CartPage","_this$props","cartItems","components_CartItem","App","BrowserRouter","Switch","Route","component","Boolean","window","location","hostname","baseUrl","process","checkStatus","response","ok","Error","readJson","json","fetchJSON","options","fetch","then","createModel","loadProduct","queryParams","arguments","undefined","qs","stringify","reducers","setList","effects","_loadAll","Object","asyncToGenerator","regenerator_default","mark","_callee","rootState","wrap","_context","next","sent","stop","_x","_x2","apply","_loadOne","_callee2","_context2","_x3","_x4","push","productId","STORAGE_KEY","models","immer","immerPlugin","store","init","plugins","redux","initialState","storageData","localStorage","getItem","JSON","parse","loadStateFromLocalStorage","middlewares","action","console","log","result","getState","subscribe","cartState","setItem","saveStateToLocalStorage","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e2dd6a3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport function Product({ product, category, addProductToCart }) {\n  return (\n    <div>\n      <Link to={`/products/${product.id}`}>\n        {product.name} ({category ? category.name : \"без категорії\"})\n      </Link>\n\n      <button onClick={addProductToCart}>в кошик</button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addProductToCart: () => dispatch.cart.addProduct(ownProps.product)\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function({ category }) {\n  return (\n    <div>\n      <Link to={`/categories/${category.id}`}>{category.name}</Link>\n    </div>\n  );\n}\n","export default function numberOfProductsInCart(cart) {\n  return cart.items.reduce((prev, item) => prev + item.quantity, 0);\n}\n","export default function totalPrice(cart, products) {\n  const price = cart.items.reduce((prev, { product, quantity }) => {\n    return prev + product.price * quantity;\n  }, 0);\n\n  return Number(price).toFixed(2);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport numberOfProductsInCartSelector from \"../selectors/numberOfProductsInCart\";\nimport totalPriceSelector from \"../selectors/totalPrice\";\n\nexport function CartButton({ productsQuantity, totalPrice }) {\n  return (\n    <Link to=\"/cart\">\n      Кошик ({productsQuantity} продуктів на суму {totalPrice} грн)\n    </Link>\n  );\n}\n\nconst mapState = state => ({\n  productsQuantity: numberOfProductsInCartSelector(state.cart),\n  totalPrice: totalPriceSelector(state.cart)\n});\n\nexport default connect(mapState)(CartButton);\n","export default function getCategoryForProduct(product, categories) {\n  return categories.find(c => c.id === product.categoryId);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Product from \"../components/Product\";\nimport Category from \"../components/Category\";\nimport CartButton from \"../components/CartButton\";\n\nimport categoryForProductSelector from \"../selectors/categoryForProductSelector\";\n\nclass ProductsPage extends React.Component {\n  componentDidMount() {\n    this.loadData(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.match.url !== this.props.match.url) {\n      this.loadData(nextProps);\n    }\n  }\n\n  loadData(props) {\n    if (props.match.path === \"/categories/:id\") {\n      var productsQueryParams = {\n        filter: { categoryId: props.match.params.id }\n      };\n    }\n\n    props.loadProducts(productsQueryParams);\n    props.loadCategories();\n  }\n\n  render() {\n    return (\n      <div>\n        <CartButton />\n        <h1>Categories</h1>\n        {this.props.categories.map(category => (\n          <Category key={category.id} category={category} />\n        ))}\n\n        <h1>Products Page {this.props.products.length}</h1>\n        {this.props.products.map(product => (\n          <Product\n            key={product.id}\n            product={product}\n            category={categoryForProductSelector(\n              product,\n              this.props.categories\n            )}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  products: state.products.list,\n  categories: state.categories.list\n});\n\nconst mapDispatch = dispatch => ({\n  loadProducts: dispatch.products.loadAll,\n  loadCategories: dispatch.categories.loadAll\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ProductsPage);\n","import React from \"react\";\n\nexport default function({ product }) {\n  return (\n    <div>\n      <h1>{product.name}</h1>\n      {product.description}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ProductExtended from \"../components/ProductExtended\";\n\ninterface Props {\n  loadOne: Function,\n  match: any,\n  product: any\n}\n\nclass ProductPage extends React.Component<Props, {}> {\n  componentDidMount() {\n    this.props.loadOne(this.props.match.params.id);\n  }\n\n  render() {\n    return this.props.product ? (\n      <ProductExtended product={this.props.product} />\n    ) : (\n        \"loading\"\n      );\n  }\n}\n\nconst mapState = (state, props) => ({\n  product: state.products.list.find(\n    product => product.id === props.match.params.id\n  )\n});\n\nconst mapDispatch = ({ products: { loadOne } }) => ({\n  loadOne\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ProductPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nexport function CartItem({ product, quantity, addOne, removeOne, remove }) {\n  return (\n    <div>\n      <Link to={`/products/${product.id}`}>{product.name}</Link>{\" \"}\n      <button onClick={removeOne}>-1</button>\n      {quantity}\n      <button onClick={addOne}>+1</button> <button onClick={remove}>x</button>\n    </div>\n  );\n}\n\nconst mapDispatch = ({ cart }, { quantity, product }) => ({\n  addOne: () => cart.setQuantity(product.id, quantity + 1),\n  removeOne: () => cart.setQuantity(product.id, quantity - 1),\n  remove: () => cart.removeProduct(product.id)\n});\n\nexport default connect(\n  null,\n  mapDispatch\n)(CartItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"./../components/CartItem\";\n\nimport numberOfProductsInCartSelector from \"../selectors/numberOfProductsInCart\";\nimport totalPriceSelector from \"../selectors/totalPrice\";\n\nclass CartPage extends React.Component {\n  render() {\n    const { cartItems, productsQuantity, totalPrice } = this.props;\n    return (\n      <div>\n        <h1>Cart</h1>\n\n        {cartItems.map(item => (\n          <CartItem\n            key={item.product.id}\n            product={item.product}\n            quantity={item.quantity}\n          />\n        ))}\n        <br />\n        <div>\n          В корзині {productsQuantity} продуктів на суму {totalPrice} грн\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ cart }) => ({\n  cartItems: cart.items,\n  productsQuantity: numberOfProductsInCartSelector(cart),\n  totalPrice: totalPriceSelector(cart)\n});\n\nexport default connect(mapState)(CartPage);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport ProductsPage from \"./pages/ProductsPage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport CartPage from \"./pages/CartPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          </ul>\n\n          <Switch>\n            <Route path=\"/cart\" component={CartPage} />\n\n            <Route path=\"/products/:id\" component={ProductPage} />\n            <Route path=\"/products\" component={ProductsPage} />\n\n            <Route path=\"/categories/:id\" component={ProductsPage} />\n\n            <Route path=\"/\" component={ProductsPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import qs from \"qs\";\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nfunction checkStatus(response) {\n  if (response.ok) {\n    return response;\n  } else {\n    throw new Error(\"server error\");\n  }\n}\n\nfunction readJson(response) {\n  return response.json();\n}\n\nfunction fetchJSON(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(readJson);\n}\n\n// queryParams = {skip: 1, limit: 1, sort: \"-name\", filter: {categoryId: '1'}}\n// loadProducts({filter: {categoryId: 'ssss'}})\n// ?filter[categoryId]=5c0b84988b3a460063cdbb20\nexport function loadProducts(queryParams = {}) {\n  return fetchJSON(`${baseUrl}/products?${qs.stringify(queryParams)}`);\n}\n\nexport function loadProduct(id) {\n  return fetchJSON(`${baseUrl}/products/${id}`);\n}\n\nexport function loadCategories() {\n  return fetchJSON(`${baseUrl}/categories`);\n}\n\nexport function loadCategory(id) {\n  return fetchJSON(`${baseUrl}/categories/${id}`);\n}\n","import { loadProducts, loadProduct } from \"../libs/api\";\n\nfunction createModel(loadProducts, loadProduct) {\n  return {\n    state: {\n      list: []\n    },\n    reducers: {\n      setList(state, list) {\n        state.list = list;\n      }\n    },\n    effects: dispatch => ({\n      async loadAll(queryParams, rootState) {\n        // todo handle errors\n        const products = await loadProducts(queryParams);\n\n        this.setList(products);\n      },\n\n      async loadOne(id, rootState) {\n        // todo handle errors\n        const product = await loadProduct(id);\n\n        this.setList([product]);\n      }\n    })\n  };\n}\n\nexport { createModel };\nexport default createModel(loadProducts, loadProduct);\n","import { loadCategories } from \"../libs/api\";\n\nfunction createModel(loadCategories) {\n  return {\n    state: {\n      list: []\n    },\n    reducers: {\n      setList(state, list) {\n        state.list = list;\n      }\n    },\n    effects: dispatch => ({\n      async loadAll(queryParams, rootState) {\n        // todo handle errors\n        const categories = await loadCategories();\n\n        this.setList(categories);\n      }\n    })\n  };\n}\n\nexport { createModel };\nexport default createModel(loadCategories);\n","// все ж краще, щоб стан корзини мав такий вигляд\n// {\n//   items: [\n//     {\n//       product: {\n//         description: 'The Apple iPhone SE has the footprint and design traits ot the iPhone 5s - from the 4-inch display to the stylish, metal-made body. On the inside, however, is packed the powerful A9 processor of the iPhone 6s, along with Apple\\'s latest and best 12MP camera. In other words, this could very well be the best small smartphone in existence. In charge of it all is the latest iOS 9.3 operating system, with support for Apple Pay, AppleID, Night Shift and Apple Health. You may have one in silver, grey, gold, or rose gold for just $399.',\n//         price: 399,\n//         image: 'http://shop.ivk-service.com/535613-thickbox/apple-iphone-se-32gb-space-grey-mp822rka.jpg',\n//         name: 'iPhone SE',\n//         categoryId: '5c0b84708b3a460063cdbb1e',\n//         userName: 'diana',\n//         id: '5c0b862d8b3a460063cdbb2c'\n//       },\n//       quantity: 3\n//     },\n//     {\n//       product: {\n//         description: 'Nokia 5310 XpressMusic has 30 MB of built-in memory. The main screen size is 2.1 inches, 31.5 x 41.5 mm with 240 x 320 pixels resolution. It has a 190 ppi pixel density. The screen covers about 29.4% of the device\\'s body. This is an average result.',\n//         price: 130,\n//         image: 'http://nokia-ms.ru/wp-content/uploads/2016/02/nokia5310-250x510.png',\n//         name: 'Nokia 5310 XpressMusic',\n//         categoryId: '5c0b84708b3a460063cdbb1e',\n//         userName: 'diana',\n//         id: '5c0b86448b3a460063cdbb2e'\n//       },\n//       quantity: 1\n//     }\n//   ]\n// }\nconst cart = {\n  state: {\n    items: []\n  },\n  reducers: {\n    addProduct(state, product) {\n      const item = state.items.find(item => item.product.id === product.id);\n\n      if (item) {\n        item.quantity += 1;\n      } else {\n        state.items.push({\n          product: product,\n          quantity: 1\n        });\n      }\n    },\n    removeProduct(state, productId) {\n      state.items = state.items.filter(item => item.product.id !== productId);\n    },\n    setQuantity(state, productId, quantity) {\n      if (quantity === 0) {\n        state.items = state.items.filter(item => item.product.id !== productId);\n      } else {\n        const item = state.items.find(item => item.product.id === productId);\n        item.quantity = quantity;\n      }\n    }\n  }\n};\n\nexport default cart;\n\nconst STORAGE_KEY = \"cart\";\n\nexport function loadStateFromLocalStorage() {\n  const storageData = localStorage.getItem(STORAGE_KEY);\n  return JSON.parse(storageData) || cart.state;\n}\n\nexport function saveStateToLocalStorage(store) {\n  const cartState = store.getState().cart;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(cartState));\n}\n","import products from \"./products\";\nimport categories from \"./categories\";\nimport cart from \"./cart\";\n\nexport default {\n  products,\n  categories,\n  cart\n};\n","import { init } from \"@rematch/core\";\nimport immerPlugin from \"@rematch/immer\";\n\nimport models from \"./models\";\n\nimport {\n  loadStateFromLocalStorage,\n  saveStateToLocalStorage\n} from \"./models/cart\";\n\nconst immer = immerPlugin();\nconst logger = store => next => action => {\n  console.log(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  return result;\n};\n\nconst store = init({\n  models,\n  plugins: [immer],\n  redux: {\n    initialState: {\n      cart: loadStateFromLocalStorage()\n    },\n    middlewares: [logger]\n  }\n});\n\nstore.subscribe(() => {\n  saveStateToLocalStorage(store);\n});\n\nwindow.store = store;\n\n// Hot reloading\nif (module.hot) {\n  // Reload rematch models\n  module.hot.accept(\"./models\", () => {\n    Object.keys(models).forEach(modelKey => {\n      console.log(`Reloading model ${modelKey}`);\n      store.model({\n        name: modelKey,\n        ...models[modelKey]\n      });\n    });\n  });\n}\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept(\"./App\", () => {\n    ReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      document.getElementById(\"root\")\n    );\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}